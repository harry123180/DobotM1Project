import cv2
import numpy as np
from PIL import Image

# 定義棋盤格規格
CHECKERBOARD = (17, 12)
criteria = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 30, 0.001)

# 定義棋盤格 3D 點
objp = np.zeros((1, CHECKERBOARD[0] * CHECKERBOARD[1], 3), np.float32)
objp[0, :, :2] = np.mgrid[0:CHECKERBOARD[0], 0:CHECKERBOARD[1]].T.reshape(-1, 2)
objp = objp * 10  # 單位 10mm

# 單張圖片路徑
image_path = 'C:\\Users\\TSIC\\Documents\\GitHub\\DobotM1Project\\Mycode\\converted_jpgs\\2053.jpg'
img = cv2.imread(image_path)

if img is None:
    print("無法讀取圖片，請確認路徑正確。")
else:
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

    # 查找棋盤角點
    ret, corners = cv2.findChessboardCorners(gray, CHECKERBOARD, cv2.CALIB_CB_ADAPTIVE_THRESH +
                                             cv2.CALIB_CB_FAST_CHECK + cv2.CALIB_CB_NORMALIZE_IMAGE)

    if ret:
        print("成功檢測到棋盤角點。")
        
        # 優化角點位置
        corners2 = cv2.cornerSubPix(gray, corners, (11, 11), (-1, -1), criteria)

        # 輸出第 0 點到第 203 點的 (u, v) 值
        for idx, corner in enumerate(corners2):
            if idx > 203:  # 超過第 203 點就停止輸出
                break
            u, v = corner.ravel()  # 提取 u, v 值
            print(f"點 {idx}: (u, v) = ({u:.2f}, {v:.2f})")
    else:
        print("未檢測到棋盤角點，請確認圖片是否正確包含棋盤格。")
import numpy as np

# 将像素坐标 (u, v) 转换为 NumPy 数组
image_points = np.array([
    [1201.81, 1418.52], [1202.14, 1344.56], [1202.53, 1270.53], [1202.74, 1196.70],
    [1203.23, 1122.58], [1203.50, 1048.67], [1203.92, 974.53], [1204.28, 900.87],
    [1204.63, 826.82], [1205.02, 752.98], [1205.39, 678.92], [1205.78, 605.23],
    [1206.16, 531.23], [1206.54, 457.76], [1206.85, 383.82], [1207.29, 310.25],
    [1207.64, 236.56], [1275.67, 1418.93], [1276.07, 1344.94], [1276.44, 1270.97],
    [1276.78, 1197.06], [1277.09, 1122.97], [1277.49, 1049.01], [1277.75, 975.05],
    [1278.23, 901.24], [1278.50, 827.29], [1278.89, 753.31], [1279.36, 679.37],
    [1279.63, 605.49], [1279.99, 531.61], [1280.43, 457.98], [1280.67, 384.26],
    [1281.13, 310.59], [1281.58, 236.84], [1349.97, 1419.33], [1350.34, 1345.43],
    [1350.70, 1271.38], [1350.92, 1197.39], [1351.45, 1123.42], [1351.68, 1049.35],
    [1352.08, 975.45], [1352.50, 901.50], [1352.77, 827.61], [1353.16, 753.61],
    [1353.52, 679.61], [1353.85, 605.80], [1354.18, 531.90], [1354.53, 458.36],
    [1354.80, 384.53], [1355.32, 310.95], [1355.47, 237.21], [1423.90, 1419.70],
    [1424.20, 1345.71], [1424.58, 1271.75], [1424.98, 1197.72], [1425.41, 1123.75],
    [1425.68, 1049.81], [1426.12, 975.69], [1426.35, 901.90], [1426.75, 827.95],
    [1427.02, 754.00], [1427.40, 680.14], [1427.68, 606.14], [1428.12, 532.37],
    [1428.36, 458.77], [1428.67, 384.95], [1428.96, 311.31], [1429.42, 237.55],
    [1497.85, 1420.11], [1498.19, 1346.13], [1498.58, 1272.12], [1498.93, 1198.17],
    [1499.31, 1124.19], [1499.62, 1050.10], [1499.96, 976.15], [1500.29, 902.32],
    [1500.61, 828.37], [1500.89, 754.43], [1501.31, 680.48], [1501.65, 606.57],
    [1501.80, 532.69], [1502.22, 459.10], [1502.49, 385.34], [1502.81, 311.67],
    [1503.21, 237.97], [1572.10, 1420.37], [1572.40, 1346.47], [1572.79, 1272.47],
    [1573.12, 1198.50], [1573.50, 1124.49], [1573.81, 1050.54], [1574.12, 976.42],
    [1574.49, 902.73], [1574.78, 828.75], [1575.12, 754.71], [1575.48, 680.78],
    [1575.69, 606.89], [1576.17, 533.10], [1576.31, 459.50], [1576.71, 385.66],
    [1576.82, 311.94], [1577.28, 238.28], [1645.92, 1420.69], [1646.29, 1346.71],
    [1646.70, 1272.75], [1647.03, 1198.79], [1647.40, 1124.84], [1647.72, 1050.79],
    [1648.13, 976.90], [1648.38, 903.01], [1648.70, 829.09], [1648.95, 755.18],
    [1649.31, 681.28], [1649.54, 607.45], [1649.83, 533.45], [1650.25, 459.79],
    [1650.41, 386.14], [1650.67, 312.44], [1650.87, 238.70], [1719.68, 1421.06],
    [1720.11, 1347.05], [1720.50, 1273.09], [1720.94, 1199.24], [1721.26, 1125.18],
    [1721.66, 1051.19], [1722.09, 977.28], [1722.31, 903.45], [1722.56, 829.51],
    [1722.80, 755.46], [1723.22, 681.59], [1723.40, 607.72], [1723.74, 533.72],
    [1723.85, 460.29], [1724.35, 386.46], [1724.42, 312.79], [1724.83, 239.07],
    [1793.61, 1421.43], [1793.95, 1347.41], [1794.40, 1273.44], [1794.74, 1199.49],
    [1795.21, 1125.53], [1795.44, 1051.56], [1795.79, 977.62], [1796.10, 903.79],
    [1796.44, 829.87], [1796.70, 756.00], [1796.90, 682.04], [1797.31, 608.22],
    [1797.54, 534.28], [1797.87, 460.67], [1797.99, 386.99], [1798.22, 313.26],
    [1798.41, 239.47], [1867.57, 1421.67], [1868.14, 1347.71], [1868.48, 1273.68],
    [1868.91, 1199.85], [1869.23, 1125.87], [1869.61, 1051.92], [1869.92, 977.88],
    [1870.20, 904.29], [1870.49, 830.28], [1870.71, 756.43], [1871.13, 682.40],
    [1871.29, 608.59], [1871.58, 534.77], [1871.78, 461.22], [1872.01, 387.43],
    [1872.26, 313.68], [1872.50, 239.96], [1941.46, 1421.94], [1941.77, 1347.97],
    [1942.21, 1274.16], [1942.59, 1200.16], [1943.02, 1126.25], [1943.29, 1052.31],
    [1943.59, 978.36], [1943.91, 904.61], [1944.33, 830.70], [1944.49, 756.73],
    [1944.80, 682.84], [1944.98, 609.08], [1945.39, 535.27], [1945.49, 461.67],
    [1945.72, 387.77], [1945.88, 314.22], [1946.09, 240.37], [2015.12, 1422.18],
    [2015.53, 1348.36], [2015.95, 1274.40], [2016.38, 1200.56], [2016.70, 1126.57],
    [2017.13, 1052.69], [2017.33, 978.66], [2017.71, 905.10], [2017.89, 831.04],
    [2018.28, 757.09], [2018.53, 683.31], [2018.72, 609.52], [2019.02, 535.58],
    [2019.31, 462.23], [2019.38, 388.30], [2019.68, 314.64], [2019.89, 240.90]
])

print("像素點座標形狀:", image_points.shape)
print("像素點座標數據:\n", image_points)
